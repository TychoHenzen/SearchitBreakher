name: CI Build, Test, Coverage & Pages

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test-coverage:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj', '**/packages.config') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Install VC++ runtime needed by MGCB
        run: choco install vcredist140 -y

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Install MonoGame Content Builder
        run: dotnet tool install dotnet-mgcb --version 3.8.3

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore dependencies
        run: dotnet restore

      - name: Add global tools to PATH
        shell: bash
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Build library
        run: dotnet build SearchitLibrary/SearchitLibrary.csproj --no-restore --configuration Release

      - name: Build executable
        run: dotnet build SearchitBreakher/SearchitBreakher.csproj --no-restore --configuration Release

      - name: Build tests
        run: dotnet build SearchitTest/SearchitTest.csproj --no-restore --configuration Release

      - name: Run tests with coverage
        shell: pwsh
        run: |
          dotnet test SearchitTest/SearchitTest.csproj --no-build --configuration Release `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput=TestResults/coverage/

      - name: Generate HTML coverage report
        run: |
          reportgenerator `
            -reports:SearchitTest/TestResults/coverage/coverage.opencover.xml `
            -targetdir:coverage-report `
            -reporttypes:Html

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report
  stryker:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj', '**/packages.config') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Cache .NET tools
        uses: actions/cache@v3
        with:
          path: ~/.dotnet/tools
          key: dotnet-tools-${{ runner.os }}
          restore-keys: |
            dotnet-tools-${{ runner.os }}

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Install Stryker.NET
        run: dotnet tool install --global dotnet-stryker

      - name: Run mutation analysis
        run: |
          New-Item -ItemType Directory -Path StrykerOutput -Force | Out-Null
          dotnet stryker > StrykerOutput/cleartexttree.log
        
      - name: Upload mutation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mutation-report
          path: StrykerOutput


  publish-pages:
    needs: [ build-test-coverage, stryker ]
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage-report
      - name: Download mutation report
        uses: actions/download-artifact@v4
        with:
          name: mutation-report
          path: mutation-report

      - name: Flatten mutation report
        run: |
          mkdir -p mutation-pages
          mv mutation-report/*/reports/* mutation-pages/
      
      - name: Prepare site directory
        run: |
          mkdir site
          mv coverage-report site/coverage
          mv mutation-pages site/mutation
      - name: Upload combined site for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy-pages:
    needs: publish-pages
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to GitHub Pages
      id-token: write   # to authenticate the deployment
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4